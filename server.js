const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const app = express();

const token = '7376652915:AAGqwHaHBRmxd6ZcCt9mmT_lg1kstFsgpj8';
const bot = new TelegramBot(token);

const WEBHOOK_PATH = '/bot';
const WEBHOOK_URL = 'https://manifest-34oy.onrender.com' + WEBHOOK_PATH; // –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω–∏–π URL –≤—ñ–¥ Render

app.use(express.json());
app.post(WEBHOOK_PATH, (req, res) => {
    bot.processUpdate(req.body);
    res.sendStatus(200);
});

bot.setWebHook(WEBHOOK_URL).then(() => {
    console.log(`Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ ${WEBHOOK_URL}`);
});

const projects = {};
const MODERATOR_ID = '743820908';
const APP_URL = "https://t.me/XpayTONbot";

bot.onText(/\/start add_project_(.+)/, (msg, match) => {
    const userId = match[1];
    projects[userId] = {};
    projects[userId].telegramAccountId = userId;
    bot.sendMessage(msg.chat.id, "üëã –í—ñ—Ç–∞—é! –í–∏ —Ä–æ–∑–ø–æ—á–∞–ª–∏ –ø—Ä–æ—Ü–µ—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É –Ω–∞ XPAY –ú–∞—Ä–∫–µ—Ç.\n" +
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É –≤–∞—à–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 'My Cool Project'):");
});

bot.on('message', async (msg) => {
    const userId = msg.from.id.toString();
    if (!projects[userId] || msg.text.startsWith('/')) return;

    const step = Object.keys(projects[userId]).length - 1;
    switch (step) {
        case 0:
            projects[userId].name = msg.text;
            bot.sendMessage(msg.chat.id, "üîó –î—è–∫—É—é! –¢–µ–ø–µ—Ä –≤–∫–∞–∂—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤–∞—à –ø—Ä–æ–µ–∫—Ç.\n" +
                "–¶–µ –º–æ–∂–µ –±—É—Ç–∏ Telegram-–∫–∞–Ω–∞–ª, —Å–∞–π—Ç –∞–±–æ —ñ–Ω—à–µ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 't.me/MyProject'):");
            break;
        case 1:
            projects[userId].link = msg.text;
            bot.sendMessage(msg.chat.id, "üìù –ß—É–¥–æ–≤–æ! –ù–∞–¥–∞–π—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å –≤–∞—à–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É.\n" +
                "–û–ø–∏—à—ñ—Ç—å, —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º –¥–ª—è —É—á–∞—Å—Ç—ñ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '–ü—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª —ñ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –Ω–∞–≥–æ—Ä–æ–¥—É'):");
            break;
        case 2:
            projects[userId].description = msg.text;
            bot.sendMessage(msg.chat.id, "üí∞ –ß—É–¥–æ–≤–æ! –Ø–∫–∞ –±—É–¥–µ –Ω–∞–≥–æ—Ä–æ–¥–∞ –¥–ª—è —É—á–∞—Å–Ω–∏–∫—ñ–≤ —É TON?\n" +
                "–í–∫–∞–∂—ñ—Ç—å —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '5' –¥–ª—è 5 TON):");
            break;
        case 3:
            projects[userId].reward = parseFloat(msg.text);
            if (isNaN(projects[userId].reward) || projects[userId].reward <= 0) {
                bot.sendMessage(msg.chat.id, "‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É —á–∏—Å–ª–æ–≤—É –Ω–∞–≥–æ—Ä–æ–¥—É –≤ TON (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '5')!");
                return;
            }
            bot.sendMessage(msg.chat.id, "üè∑ –ß–∏ —î —É –≤–∞—à–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É –≤–ª–∞—Å–Ω–∏–π —Ç–æ–∫–µ–Ω?\n" +
                "–í–∫–∞–∂—ñ—Ç—å –π–æ–≥–æ –Ω–∞–∑–≤—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 'XYZ') –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å 'N/A', —è–∫—â–æ —Ç–æ–∫–µ–Ω–∞ –Ω–µ–º–∞—î:");
            break;
        case 4:
            projects[userId].tokenName = msg.text === 'N/A' ? null : msg.text;
            bot.sendMessage(msg.chat.id, "üî¢ –Ø–∫—â–æ —É –≤–∞—Å —î —Ç–æ–∫–µ–Ω, –≤–∫–∞–∂—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω—ñ–≤ –¥–ª—è –Ω–∞–≥–æ—Ä–æ–¥–∏.\n" +
                "–ù–∞–ø–∏—à—ñ—Ç—å —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '1000') –∞–±–æ '0', —è–∫—â–æ —Ç–æ–∫–µ–Ω–∞ –Ω–µ–º–∞—î:");
            break;
        case 5:
            projects[userId].tokenReward = parseInt(msg.text) || 0;
            if (isNaN(projects[userId].tokenReward) || projects[userId].tokenReward < 0) {
                bot.sendMessage(msg.chat.id, "‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω—ñ–≤ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '1000' –∞–±–æ '0')!");
                return;
            }
            bot.sendMessage(msg.chat.id, "üìÇ –î–æ —è–∫–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–∞–ª–µ–∂–∏—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç?\n" +
                "–û–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –æ–ø—Ü—ñ–π –Ω–∏–∂—á–µ:", {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: "Airdrop", callback_data: `category_${userId}_airdrop` }],
                        [{ text: "Task", callback_data: `category_${userId}_task` }],
                        [{ text: "Game", callback_data: `category_${userId}_game` }]
                    ]
                }
            });
            break;
        case 6:
            projects[userId].expirationDate = msg.text;
            if (!/^\d{4}-\d{2}-\d{2}$/.test(projects[userId].expirationDate)) {
                bot.sendMessage(msg.chat.id, "‚ùå –í–∫–∞–∂—ñ—Ç—å –¥–∞—Ç—É —É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ: YYYY-MM-DD (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '2025-12-31')!");
                return;
            }
            projects[userId].status = "pending";
            projects[userId].submittedBy = userId;
            projects[userId].createdAt = new Date().toISOString();

            bot.sendMessage(msg.chat.id, "‚úÖ –í–∞—à –ø—Ä–æ–µ–∫—Ç —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—é!\n\n" +
                `–ù–∞–∑–≤–∞: ${projects[userId].name}\n` +
                `–ü–æ—Å–∏–ª–∞–Ω–Ω—è: ${projects[userId].link}\n` +
                `–û–ø–∏—Å: ${projects[userId].description}\n` +
                `–ù–∞–≥–æ—Ä–æ–¥–∞: ${projects[userId].reward} TON\n` +
                `–¢–æ–∫–µ–Ω: ${projects[userId].tokenName || 'N/A'}\n` +
                `–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω—ñ–≤: ${projects[userId].tokenReward}\n` +
                `–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: ${projects[userId].category}\n` +
                `–î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è: ${projects[userId].expirationDate}\n\n` +
                "–ü–µ—Ä–µ–π–¥—ñ—Ç—å —É –¥–æ–¥–∞—Ç–æ–∫, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—É—Å:", {
                reply_markup: {
                    inline_keyboard: [[
                        { text: "üöÄ –ü–µ—Ä–µ–π—Ç–∏ –≤ –¥–æ–¥–∞—Ç–æ–∫", url: `${APP_URL}?telegram_account_id=${userId}` }
                    ]]
                }
            });

            bot.sendMessage(MODERATOR_ID, "üîî –ù–æ–≤–∏–π –ø—Ä–æ–µ–∫—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—é:\n\n" +
                `–ù–∞–∑–≤–∞: ${projects[userId].name}\n` +
                `–ü–æ—Å–∏–ª–∞–Ω–Ω—è: ${projects[userId].link}\n` +
                `–û–ø–∏—Å: ${projects[userId].description}\n` +
                `–ù–∞–≥–æ—Ä–æ–¥–∞: ${projects[userId].reward} TON\n` +
                `–¢–æ–∫–µ–Ω: ${projects[userId].tokenName || 'N/A'}\n` +
                `–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω—ñ–≤: ${projects[userId].tokenReward}\n` +
                `–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: ${projects[userId].category}\n` +
                `–î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è: ${projects[userId].expirationDate}\n` +
                `–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: ${projects[userId].submittedBy}`);

            await saveCompanyToServer(projects[userId]);
            delete projects[userId];
            break;
    }
});

bot.on('callback_query', async (query) => {
    const [action, userId, value] = query.data.split('_');
    if (action === 'category' && projects[userId]) {
        projects[userId].category = value;
        bot.editMessageText("üìÇ –í–∏ –æ–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é: " + value + ".\n" +
            "–û—Å—Ç–∞–Ω–Ω—ñ–π –∫—Ä–æ–∫! –í–∫–∞–∂—ñ—Ç—å –¥–∞—Ç—É –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è –ø—Ä–æ–µ–∫—Ç—É.\n" +
            "–§–æ—Ä–º–∞—Ç: YYYY-MM-DD (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '2025-12-31'):", {
            chat_id: query.message.chat.id,
            message_id: query.message.message_id
        });
    }
});

async function saveCompanyToServer(company) {
    try {
        const response = await fetch('https://hryvnia-5.onrender.com/api/save-company', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(company)
        });
        if (!response.ok) throw new Error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è');
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞:', error);
        bot.sendMessage(company.submittedBy, "‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –ø—Ä–æ–µ–∫—Ç—É!");
        bot.sendMessage(MODERATOR_ID, "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –ø—Ä–æ–µ–∫—Ç—É –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ " + company.submittedBy);
    }
}

const port = process.env.PORT || 10000;
app.listen(port, '0.0.0.0', () => {
    console.log(`–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
});